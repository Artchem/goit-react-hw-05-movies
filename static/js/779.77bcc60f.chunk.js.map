{"version":3,"file":"static/js/779.77bcc60f.chunk.js","mappings":"oJAIA,IAJA,YAA2B,IAAVA,EAAS,EAATA,MACf,OAAO,wBAAKA,GACb,C,6ECCYC,EAAS,WACpB,OACE,0BACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,iMCfYC,EAAaC,EAAAA,GAAAA,GAAH,0GAOVC,EAAaD,EAAAA,GAAAA,GAAH,0H,SCmDvB,MAnDA,WACE,OAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOZ,EAAP,KAAciB,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAvBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6FACEJ,GAAW,GADb,mBAG8BK,EAAAA,EAAAA,GAAW,SAAD,OAAUH,EAAV,aAHxC,gBAK2B,KAFfI,EAHZ,EAGYA,SAEIC,QACVC,EAAAA,GAAAA,KAAA,4CAEFV,EAAeQ,GARnB,kDAWIL,EAAS,KAAMQ,SAXnB,yBAaIT,GAAW,GAbf,8EAFc,sBACTE,GADS,mCAmBdQ,EACD,GAAE,CAACR,KAIF,gCACGH,IAAW,SAACd,EAAA,EAAD,IACXD,IAAS,SAAC2B,EAAA,EAAD,CAAO3B,MAAOA,KACxB,SAACS,EAAD,UACGI,GAAsC,IAAvBA,EAAYU,OAC1BV,EAAYe,KAAI,SAAAC,GAAO,OACrB,UAAClB,EAAD,YACE,0BAAI,WAASkB,EAAQC,WACrB,uBAAID,EAAQE,YAFGF,EAAQG,GADJ,KAOvB,uBAAG,oDAKZ,C,yHC9CM,SAAeX,EAAtB,+CAAO,OAAP,oBAAO,WAA0BY,GAA1B,8FAAiCC,EAAjC,+BAAwC,EAAxC,SACcC,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACAC,EADA,8CADd,cACCE,EADD,OAICC,EAAOD,EAAKC,KAJb,kBAMEA,GANF,mEASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAgCL,EAAOC,GAAvC,yFACcC,EAAAA,EAAAA,IAAA,6BACKF,EADL,iBACmBC,EADnB,8CADd,cACCE,EADD,OAICC,EAAOD,EAAKC,KAJb,kBAMEA,GANF,kEAnBPF,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api-themovie.js"],"sourcesContent":["function Error({ error }) {\n  return <h2>{error}</h2>;\n}\n\nexport default Error;\n","import { ColorRing } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-right: 40px;\n`;\n\nexport const StyledItem = styled.li`\n  padding-left: 15px;\n  padding-right: 15px;\n  border: 1px solid grey;\n  border-radius: 10px;\n`;\n","import Error from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovie } from 'services/api-themovie';\nimport { StyledItem, StyledList } from './Reviews.styled';\n\nfunction Reviews() {\n  const [dataReviews, setdataReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  //   console.log('movieId :>> ', movieId);\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchTrendingFilm() {\n      setLoading(true);\n      try {\n        const { results } = await fetchMovie(`movie/${movieId}/reviews`);\n        // console.log('cast :>> ', cast);\n        if (results.length === 0) {\n          toast.info(`We don't have any reviews for this movie`);\n        }\n        setdataReviews(results);\n        // console.log('results :>> ', results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchTrendingFilm();\n  }, [movieId]);\n\n  // console.log('dataReviews :>> ', dataReviews);\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Error error={error} />}\n      <StyledList>\n        {dataReviews && dataReviews.length !== 0 ? (\n          dataReviews.map(reviews => (\n            <StyledItem key={reviews.id}>\n              <h3>Author: {reviews.author}</h3>\n              <p>{reviews.content}</p>\n            </StyledItem>\n          ))\n        ) : (\n          <p>\"We don't have any reviews for this movie\"</p>\n        )}\n      </StyledList>\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n// https://api.themoviedb.org/3/movie/popular/?api_key=\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers.common['key'] = '38837496-e09cca1b216ed759136fb60be';\n// const API_KEY = 'b2293c9f70e699fcb144268897e83a3f';\n// const params = {\n//   key: API_KEY,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: true,\n// per_page: 12,\n// };\nexport async function fetchMovie(query, page = 1) {\n  const resp = await axios.get(\n    `${query}?page=${page}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesByQuery(query, page) {\n  const resp = await axios.get(\n    `search/movie?query=${query}&page=${page}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n"],"names":["error","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","StyledList","styled","StyledItem","useState","dataReviews","setdataReviews","loading","setLoading","setError","movieId","useParams","useEffect","fetchMovie","results","length","toast","message","fetchTrendingFilm","Error","map","reviews","author","content","id","query","page","axios","resp","data","getMoviesByQuery"],"sourceRoot":""}