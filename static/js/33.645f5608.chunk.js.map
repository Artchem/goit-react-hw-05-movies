{"version":3,"file":"static/js/33.645f5608.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api-themovie.js"],"sourcesContent":["function Error({ error }) {\n  return <h2>{error}</h2>;\n}\n\nexport default Error;\n","import { ColorRing } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 25px;\n  padding-right: 70px;\n`;\n\nexport const LinkButton = styled(Link)`\n  display: block;\n  text-align: center;\n  height: 20px;\n  width: 100px;\n  padding: 5px;\n  margin-right: auto;\n  color: #3f3f3f;\n  text-decoration: none;\n  border: 1px solid gray;\n  border-radius: 5px;\n  &:hover {\n    color: navy;\n    border-color: navy;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const StyledImage = styled.img`\n  width: 300px;\n  height: 100%;\n  border-radius: 10px;\n`;\n\nexport const FilmInfo = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  /* padding-left: 30px; */\n`;\n\nexport const StyledUl = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const StyledInfo = styled.div``;\n","import Error from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/api-themovie';\nimport {\n  Container,\n  FilmInfo,\n  LinkButton,\n  StyledImage,\n  StyledInfo,\n  StyledUl,\n  Title,\n} from './MovieDetails.styled';\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  console.log('movieId :>> ', movieId);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchTrendingFilm() {\n      setLoading(true);\n      try {\n        const data = await fetchMovie(`movie/${movieId}`);\n        console.log('data :>> ', data);\n\n        setMovieDetails(data);\n        console.log('results :>> ', data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchTrendingFilm();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Error error={error} />}\n      {movieDetails && (\n        <Container>\n          <LinkButton to={backLinkLocationRef.current}>Go back</LinkButton>\n          <FilmInfo>\n            <StyledImage\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n                  : defaultImg\n              }\n              alt={movieDetails.title}\n            />\n            <div>\n              <h2>\n                {movieDetails.title}{' '}\n                {movieDetails.release_date\n                  ? `(${movieDetails.release_date.slice(0, 4)})`\n                  : ''}\n              </h2>\n              <p>User Score: {movieDetails.vote_average.toFixed(1) * 10}%</p>\n              <h3>Overview</h3>\n              <p>{movieDetails.overview}</p>\n              <h3>Genres</h3>\n              <p>{movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </FilmInfo>\n          <StyledInfo>\n            <Title>Additional information</Title>\n            <StyledUl>\n              <li>\n                <LinkButton to=\"cast\">Cast</LinkButton>\n              </li>\n              <li>\n                <LinkButton to=\"reviews\">Reviews</LinkButton>\n              </li>\n            </StyledUl>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </StyledInfo>\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n// https://api.themoviedb.org/3/movie/popular/?api_key=\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers.common['key'] = '38837496-e09cca1b216ed759136fb60be';\n// const API_KEY = 'b2293c9f70e699fcb144268897e83a3f';\n// const params = {\n//   key: API_KEY,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: true,\n// per_page: 12,\n// };\nexport async function fetchMovie(query, page = 1) {\n  const resp = await axios.get(\n    `${query}?page=${page}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesByQuery(query, page) {\n  const resp = await axios.get(\n    `search/movie?query=${query}&page=${page}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n"],"names":["error","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Container","styled","LinkButton","Link","StyledImage","FilmInfo","Title","StyledUl","StyledInfo","useState","movieDetails","setMovieDetails","loading","setLoading","setError","movieId","useParams","console","log","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","data","results","message","fetchTrendingFilm","Error","to","current","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback","query","page","axios","resp","getMoviesByQuery"],"sourceRoot":""}