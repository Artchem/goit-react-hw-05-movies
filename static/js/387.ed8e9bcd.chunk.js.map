{"version":3,"file":"static/js/387.ed8e9bcd.chunk.js","mappings":"2SAEaA,EAAaC,EAAAA,GAAAA,GAAH,mIAQVC,EAAaD,EAAAA,GAAAA,GAAH,yCAIVE,EAAcF,EAAAA,GAAAA,IAAH,mFAMXG,EAAaH,EAAAA,GAAAA,EAAH,4C,SC0CvB,MAvDA,WACE,OAAkCI,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OApBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6FACEL,GAAW,GADb,mBAG2BM,EAAAA,EAAAA,GAAW,SAAD,OAAUH,EAAV,aAHrC,gBAGYI,EAHZ,EAGYA,KAERT,EAAaS,GALjB,gDAQIL,EAAS,KAAMM,SARnB,yBAUIR,GAAW,GAVf,6EAFc,sBACTG,GADS,mCAgBdM,EACD,GAAE,CAACN,IAEJO,QAAQC,IAAI,iBAAkBd,IAE5B,gCACGE,IAAW,SAACa,EAAA,EAAD,IACXX,IAAS,SAACY,EAAA,EAAD,CAAOZ,MAAOA,KACxB,SAACV,EAAD,UACGM,GACCA,EAAUiB,KAAI,SAAAP,GAAI,OAChB,UAACd,EAAD,YACE,SAACC,EAAD,CACEqB,IACER,EAAKS,aAAL,0CACuCT,EAAKS,cAjC1D,8EAoCYC,IAAKV,EAAKW,QAEZ,4BACE,UAACvB,EAAD,WAAY,SAAOY,EAAKW,SACxB,UAACvB,EAAD,WAAY,cAAYY,EAAKY,kBAXhBZ,EAAKa,GADN,QAmB3B,C,oCCxDD,IAJA,YAA2B,IAAVnB,EAAS,EAATA,MACf,OAAO,wBAAKA,GACb,C,6ECCYW,EAAS,WACpB,OACE,0BACE,SAAC,KAAD,CACES,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,yHCLM,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BsB,GAA1B,8FAAiCC,EAAjC,+BAAwC,EAAxC,SACcC,EAAAA,EAAAA,IAAA,UACdF,EADc,iBACAC,EADA,8CADd,cACCE,EADD,OAICC,EAAOD,EAAKC,KAJb,kBAMEA,GANF,mEASA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAgCL,EAAOC,GAAvC,yFACcC,EAAAA,EAAAA,IAAA,6BACKF,EADL,iBACmBC,EADnB,8CADd,cACCE,EADD,OAICC,EAAOD,EAAKC,KAJb,kBAMEA,GANF,kEAnBPF,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.jsx","components/Loader/Loader.jsx","services/api-themovie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: center; */\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const StyledItem = styled.li`\n  width: 200px;\n`;\n\nexport const StyledImage = styled.img`\n  display: block;\n  width: 200px;\n  border-radius: 5px;\n`;\n\nexport const StyledText = styled.p`\n  font-size: 16px;\n`;\n","import Error from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/api-themovie';\nimport { StyledImage, StyledItem, StyledList, StyledText } from './Cast.styled';\n\nfunction Cast() {\n  const [infoCasts, setInfoCasts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchTrendingFilm() {\n      setLoading(true);\n      try {\n        const { cast } = await fetchMovie(`movie/${movieId}/credits`);\n\n        setInfoCasts(cast);\n        // console.log('infoCast :>> ', dataCast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchTrendingFilm();\n  }, [movieId]);\n\n  console.log('infoCasts :>> ', infoCasts);\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <Error error={error} />}\n      <StyledList>\n        {infoCasts &&\n          infoCasts.map(cast => (\n            <StyledItem key={cast.id}>\n              <StyledImage\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                    : defaultImg\n                }\n                alt={cast.name}\n              />\n              <div>\n                <StyledText>Name: {cast.name}</StyledText>\n                <StyledText>Character: {cast.character}</StyledText>\n              </div>\n            </StyledItem>\n          ))}\n      </StyledList>\n    </>\n  );\n}\n\nexport default Cast;\n","function Error({ error }) {\n  return <h2>{error}</h2>;\n}\n\nexport default Error;\n","import { ColorRing } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\n// https://api.themoviedb.org/3/movie/popular/?api_key=\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers.common['key'] = '38837496-e09cca1b216ed759136fb60be';\n// const API_KEY = 'b2293c9f70e699fcb144268897e83a3f';\n// const params = {\n//   key: API_KEY,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: true,\n// per_page: 12,\n// };\nexport async function fetchMovie(query, page = 1) {\n  const resp = await axios.get(\n    `${query}?page=${page}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesByQuery(query, page) {\n  const resp = await axios.get(\n    `search/movie?query=${query}&page=${page}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n"],"names":["StyledList","styled","StyledItem","StyledImage","StyledText","useState","infoCasts","setInfoCasts","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovie","cast","message","fetchTrendingFilm","console","log","Loader","Error","map","src","profile_path","alt","name","character","id","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","query","page","axios","resp","data","getMoviesByQuery"],"sourceRoot":""}