{"version":3,"file":"static/js/253.e4e7443b.chunk.js","mappings":"8PAEaA,EAAaC,EAAAA,GAAAA,KAAH,8KAUVC,EAAcD,EAAAA,GAAAA,MAAH,mMAUXE,EAAYF,EAAAA,GAAAA,OAAH,0PAgBTG,EAAaH,EAAAA,GAAAA,KAAH,6M,kBC7BfI,EAAaC,EAAQ,KAArBD,SA0CR,I,QAAA,EAxCA,YAAmC,IAAbE,EAAY,EAAZA,SACpB,EAAoCF,EAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAgBMC,EAAY,WAChBD,EAAc,GACf,EAED,OACE,UAACT,EAAD,YACE,SAACE,EAAD,CACES,SArBe,SAAAC,GAEnBH,EAAcG,EAAIC,OAAOC,MAAMC,cAChC,EAmBKD,MAAON,EACPQ,KAAK,aACLC,KAAK,OAGLC,YAAY,mBAEd,UAACf,EAAD,CAAWc,KAAK,SAASE,QAxBR,SAAAP,GACnBA,EAAIQ,iBACsB,KAAtBZ,EAAWa,QAIfd,EAASC,GACTE,KAJEY,EAAAA,GAAAA,MAAY,wBAKf,EAgBG,WACE,SAAC,MAAD,CAAWC,KAAM,MACjB,SAACnB,EAAD,UAAY,gBAInB,E,mCC/CYoB,EAAcvB,EAAAA,GAAAA,GAAH,oKAUXwB,EAAaxB,EAAAA,GAAAA,GAAH,kUAgBVyB,EAAYzB,EAAAA,GAAAA,IAAH,qGAOT0B,EAAa1B,EAAAA,GAAAA,EAAH,8FC0DvB,MAlFA,WAAmB,IAAD,EAChB,GAAwCI,EAAAA,EAAAA,UAAS,MAAjD,eAAOuB,EAAP,KAAqBC,EAArB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAiDjB,OA7CAC,QAAQC,IAAI,oBAAqBP,GACjCM,QAAQC,IAAI,aAAcL,IAE1BM,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAGuBC,EAAAA,EAAAA,GAAiB,GAAD,OAAIP,IAH3C,OAGUQ,EAHV,OAMIZ,EAAgBY,EAAKC,SACrBL,QAAQC,IAAI,oBAAqBG,EAAKC,SAP1C,sJADc,uBAAC,WAAD,wBAgBdC,EACD,GAAE,CAACV,IAuBJI,QAAQC,IAAI,sBAAuBH,IAGjC,iCACE,SAAC,EAAD,CAAY5B,SAbS,SAAA0B,GACvBI,QAAQC,IAAIL,GACZD,EAAgB,CAAEC,MAAOA,GAK1B,IAOIL,IACC,SAACJ,EAAD,UACGI,EAAagB,KAAI,SAAAC,GAAK,OACrB,SAACpB,EAAD,WACE,UAAC,KAAD,CAAMqB,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMd,GAAxC,WACE,SAACT,EAAD,CACEwB,IACEL,EAAMM,YAAN,0CACuCN,EAAMM,aA1D7D,8EA6DcC,IAAKP,EAAMQ,SAEb,UAAC1B,EAAD,WACGkB,EAAMQ,MACNR,EAAM7B,YAZI6B,EAAME,GADF,QAsBhC,C,qHChFM,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0BrB,GAA1B,yFACcsB,EAAAA,EAAAA,IAAA,UACdtB,EADc,8CADd,cACCuB,EADD,OAICf,EAAOe,EAAKf,KAJb,kBAMEA,GANF,kEASA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAgCP,GAAhC,yFACcsB,EAAAA,EAAAA,IAAA,6BACKtB,EADL,8CADd,cACCuB,EADD,OAICf,EAAOe,EAAKf,KAJb,kBAMEA,GANF,kEAnBPc,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api-themovie.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const StyledInput = styled.input`\n  display: inline-block;\n  width: 300px;\n  font: inherit;\n  font-size: 20px;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n`;\nexport const StyledBtn = styled.button`\n  display: inline-block;\n  width: 36px;\n  height: 36px;\n  border: 0;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &.hover {\n    opacity: 1;\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n// .input::placeholder {\n//   font: inherit;\n//   font-size: 18px;\n// }\n","import { toast } from 'react-toastify';\nimport {\n  StyledBtn,\n  StyledForm,\n  StyledInput,\n  StyledSpan,\n} from './SearchForm.styled';\nimport { FaSistrix } from 'react-icons/fa6';\n\nconst { useState } = require('react');\n\nfunction SearchForm({ onSubmit }) {\n  const [searchText, setSearchText] = useState('');\n\n  const handleChange = evt => {\n    // console.log(evt);\n    setSearchText(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchText.trim() === '') {\n      toast.error('Enter search movies !');\n      return;\n    }\n    onSubmit(searchText);\n    resetForm();\n  };\n  const resetForm = () => {\n    setSearchText('');\n  };\n\n  return (\n    <StyledForm>\n      <StyledInput\n        onChange={handleChange}\n        value={searchText}\n        name=\"searchText\"\n        type=\"text\"\n        // autocomplete=\"off\"\n        // autofocus\n        placeholder=\"Search movies\"\n      />\n      <StyledBtn type=\"submit\" onClick={handleSubmit}>\n        <FaSistrix size={25} />\n        <StyledSpan>Search</StyledSpan>\n      </StyledBtn>\n    </StyledForm>\n  );\n}\n\nexport default SearchForm;\n","import { styled } from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 0;\n`;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n  height: auto;\n  width: 240px;\n  background-color: navy;\n  text-align: center;\n  border-radius: 10px;\n  transform: scale(1);\n  transition: transform 250ms linear;\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\nexport const StyledImg = styled.img`\n  display: block;\n  height: 360px;\n  width: 100%;\n  border-radius: 10px;\n`;\n\nexport const StyledText = styled.p`\n  margin: 0;\n  padding: 10px;\n  color: yellow;\n  font-size: 18px;\n`;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api-themovie';\nimport {\n  GalleryList,\n  StyledImg,\n  StyledItem,\n  StyledText,\n} from './Movies.styled';\n\nfunction Movies() {\n  const [searchMovies, setSearchMovies] = useState(null);\n  //   const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  console.log('searchParams :>> ', searchParams);\n  console.log('query :>> ', query);\n\n  useEffect(() => {\n    async function addMoviesByQuery() {\n      //   setLoading(true);\n      try {\n        const data = await getMoviesByQuery(`${query}`);\n        // console.log('data :>> ', data);\n        // setPhotos(prevState => [...prevState, ...hits]);\n        setSearchMovies(data.results);\n        console.log('searchMovies :>> ', data.results);\n      } catch (error) {\n        // setError(error.message);\n      } finally {\n        // setLoading(false);\n      }\n    }\n\n    addMoviesByQuery();\n  }, [query]);\n  // console.log('films :>> ', films);\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // const query = searchParams.get('query') ?? '';\n  // console.log('searchParams :>> ', searchParams);\n  // console.log('query :>> ', query);\n\n  // const updateQueryString = evt => {\n  //   if (evt.target.value === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ query: evt.target.value });\n  // };\n\n  const handleFormSubmit = query => {\n    console.log(query);\n    setSearchParams({ query: query });\n    // setPage(1);\n    // setPhotos([]);\n    // setTotalPhotos(0);\n    // setError(null);\n  };\n\n  console.log('location movies:>> ', location);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleFormSubmit} />\n      {searchMovies && (\n        <GalleryList>\n          {searchMovies.map(movie => (\n            <StyledItem key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                <StyledImg\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : defaultImg\n                  }\n                  alt={movie.title}\n                />\n                <StyledText>\n                  {movie.title}\n                  {movie.name}\n                </StyledText>\n              </Link>\n            </StyledItem>\n          ))}\n        </GalleryList>\n      )}\n    </>\n  );\n}\nexport default Movies;\n","import axios from 'axios';\n// https://api.themoviedb.org/3/movie/popular/?api_key=\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers.common['key'] = '38837496-e09cca1b216ed759136fb60be';\n// const API_KEY = 'b2293c9f70e699fcb144268897e83a3f';\n// const params = {\n//   key: API_KEY,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: true,\n// per_page: 12,\n// };\nexport async function fetchMovie(query) {\n  const resp = await axios.get(\n    `${query}?api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const resp = await axios.get(\n    `search/movie?query=${query}&api_key=b2293c9f70e699fcb144268897e83a3f`\n  );\n  const data = resp.data;\n  // console.log(data);\n  return data;\n}\n"],"names":["StyledForm","styled","StyledInput","StyledBtn","StyledSpan","useState","require","onSubmit","searchText","setSearchText","resetForm","onChange","evt","target","value","toLowerCase","name","type","placeholder","onClick","preventDefault","trim","toast","size","GalleryList","StyledItem","StyledImg","StyledText","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","console","log","useEffect","getMoviesByQuery","data","results","addMoviesByQuery","map","movie","to","id","state","from","src","poster_path","alt","title","fetchMovie","axios","resp"],"sourceRoot":""}